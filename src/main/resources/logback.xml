<?xml version="1.0" encoding="UTF-8"?>
<configuration>

    <!-- log -->
    <define name="LOG_PATH" class="com.brightwindanalysis.setting.TypesafeConfigPropertyDefiner">
        <propertyName>application.log.path</propertyName>
    </define>
    <define name="LOG_NAME" class="com.brightwindanalysis.setting.TypesafeConfigPropertyDefiner">
        <propertyName>application.log.name</propertyName>
    </define>

    <!-- slack -->
    <define name="SLACK_NAME" class="com.brightwindanalysis.setting.TypesafeConfigPropertyDefiner">
        <propertyName>application.slack.name</propertyName>
    </define>
    <define name="SLACK_WEBHOOK_URL" class="com.brightwindanalysis.setting.TypesafeConfigPropertyDefiner">
        <propertyName>application.slack.webhook-url</propertyName>
    </define>

    <property name="PATTERN" value="[%date{ISO8601}][%-5level][%logger{36}][%X{akkaSource}] %msg%n"/>

    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${PATTERN}</pattern>
        </encoder>
    </appender>

    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_PATH}/${LOG_NAME}.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- daily rollover -->
            <fileNamePattern>${LOG_PATH}/${LOG_NAME}.%d{yyyy-MM-dd}.log</fileNamePattern>
            <!-- keep 30 days' worth of history capped at 3GB total size -->
            <maxHistory>30</maxHistory>
            <totalSizeCap>3GB</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <pattern>${PATTERN}</pattern>
        </encoder>
    </appender>

    <appender name="SLACK" class="com.brightwindanalysis.logback.SlackAppender">
        <applicationName>${SLACK_NAME}</applicationName>
        <webhookUrl>${SLACK_WEBHOOK_URL}</webhookUrl>
        <layout class="ch.qos.logback.classic.PatternLayout">
            <pattern>${PATTERN}</pattern>
        </layout>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>
    </appender>

    <root level="debug">
        <appender-ref ref="STDOUT"/>
        <appender-ref ref="FILE"/>
        <appender-ref ref="SLACK"/>
    </root>

</configuration>
